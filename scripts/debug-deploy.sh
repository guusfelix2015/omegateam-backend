#!/bin/bash

# Script para debug do deploy
# Execute este script no servidor para diagnosticar problemas

set -e

DEPLOY_PATH="/var/www/lineage-cp-backend"
DOMAIN="api-prd.omegateam.com.br"

echo "üîç Iniciando diagn√≥stico do deploy..."

# Verificar se estamos no diret√≥rio correto
if [ ! -f "docker-compose.production.yml" ]; then
    echo "‚ùå Erro: docker-compose.production.yml n√£o encontrado!"
    echo "Execute este script no diret√≥rio: $DEPLOY_PATH"
    exit 1
fi

echo "üìÅ Diret√≥rio correto: $(pwd)"

# Verificar containers
echo ""
echo "üê≥ Status dos containers:"
docker ps

echo ""
echo "üîç Verificando sa√∫de dos containers:"

# Backend
BACKEND_STATUS=$(docker inspect lineage-backend-prod --format='{{.State.Status}}' 2>/dev/null || echo "not found")
BACKEND_HEALTH=$(docker inspect lineage-backend-prod --format='{{.State.Health.Status}}' 2>/dev/null || echo "unknown")
echo "Backend Status: $BACKEND_STATUS"
echo "Backend Health: $BACKEND_HEALTH"

# Nginx
NGINX_STATUS=$(docker inspect lineage-nginx-prod --format='{{.State.Status}}' 2>/dev/null || echo "not found")
echo "Nginx Status: $NGINX_STATUS"

echo ""
echo "üîß Testando configura√ß√£o do nginx:"
if docker exec lineage-nginx-prod nginx -t 2>/dev/null; then
    echo "‚úÖ Configura√ß√£o do nginx est√° v√°lida"
else
    echo "‚ùå Configura√ß√£o do nginx tem problemas:"
    docker exec lineage-nginx-prod nginx -t 2>&1 || true
fi

echo ""
echo "üîê Verificando certificados SSL:"
if [ -f "nginx/ssl/fullchain.pem" ] && [ -f "nginx/ssl/privkey.pem" ]; then
    echo "‚úÖ Arquivos de certificado existem"
    echo "Certificado criado em: $(stat -c %y nginx/ssl/fullchain.pem)"
    
    # Verificar se o certificado √© v√°lido
    if openssl x509 -in nginx/ssl/fullchain.pem -text -noout >/dev/null 2>&1; then
        echo "‚úÖ Certificado √© v√°lido"
        echo "Certificado para: $(openssl x509 -in nginx/ssl/fullchain.pem -subject -noout | sed 's/subject=//')"
        echo "V√°lido at√©: $(openssl x509 -in nginx/ssl/fullchain.pem -enddate -noout | sed 's/notAfter=//')"
    else
        echo "‚ùå Certificado √© inv√°lido"
    fi
else
    echo "‚ùå Certificados SSL n√£o encontrados"
    echo "Gerando certificados..."
    bash scripts/setup-ssl.sh self-signed
fi

echo ""
echo "üåê Testando conectividade:"

# Teste interno do backend
echo "Testando backend internamente..."
if docker exec lineage-backend-prod curl -f -s http://localhost:3000/health >/dev/null 2>&1; then
    echo "‚úÖ Backend responde internamente"
    docker exec lineage-backend-prod curl -s http://localhost:3000/health
else
    echo "‚ùå Backend n√£o responde internamente"
fi

# Teste HTTP
echo ""
echo "Testando HTTP (porta 80)..."
HTTP_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/ 2>/dev/null || echo "000")
echo "HTTP Response Code: $HTTP_RESPONSE"

if [ "$HTTP_RESPONSE" = "301" ]; then
    echo "‚úÖ Redirecionamento HTTP -> HTTPS funcionando"
elif [ "$HTTP_RESPONSE" = "000" ]; then
    echo "‚ùå Nginx n√£o est√° respondendo na porta 80"
else
    echo "‚ö†Ô∏è  Resposta inesperada na porta 80"
fi

# Teste HTTPS
echo ""
echo "Testando HTTPS (porta 443)..."
if curl -k -f -s https://localhost/health >/dev/null 2>&1; then
    echo "‚úÖ HTTPS funcionando!"
    echo "Resposta:"
    curl -k -s https://localhost/health
else
    echo "‚ùå HTTPS n√£o est√° funcionando"
    HTTPS_RESPONSE=$(curl -k -s -o /dev/null -w "%{http_code}" https://localhost/health 2>/dev/null || echo "000")
    echo "HTTPS Response Code: $HTTPS_RESPONSE"
fi

echo ""
echo "üìã Logs recentes:"
echo "--- Backend logs (√∫ltimas 10 linhas) ---"
docker logs lineage-backend-prod --tail 10

echo ""
echo "--- Nginx logs (√∫ltimas 10 linhas) ---"
docker logs lineage-nginx-prod --tail 10

echo ""
echo "üîç Diagn√≥stico conclu√≠do!"
echo ""
echo "üí° Pr√≥ximos passos:"
echo "1. Se HTTPS n√£o funcionar, verifique os certificados SSL"
echo "2. Se backend n√£o responder, verifique os logs do backend"
echo "3. Se nginx n√£o responder, verifique a configura√ß√£o do nginx"
echo ""
echo "üõ†Ô∏è  Comandos √∫teis:"
echo "   Reiniciar nginx: docker-compose -f docker-compose.production.yml restart nginx"
echo "   Regenerar SSL: bash scripts/setup-ssl.sh self-signed"
echo "   Ver logs: docker-compose -f docker-compose.production.yml logs -f"
