// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  PLAYER
  CP_LEADER
}

enum ItemCategory {
  HELMET
  ARMOR
  PANTS
  BOOTS
  GLOVES
  NECKLACE
  EARRING
  RING
  SHIELD
  WEAPON
}

enum ItemGrade {
  D
  C
  B
  A
  S
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  nickname  String   @unique
  password  String?  // Optional for demo purposes
  avatar    String?
  isActive  Boolean  @default(true)
  lvl       Int      @default(1)
  role      UserRole
  classeId  String?  // Optional - user can set later
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  classe         Classe?            @relation(fields: [classeId], references: [id])
  companyParties UserCompanyParty[]

  @@map("users")
}

model Classe {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  // Relations
  users User[]

  @@map("classes")
}

model CompanyParty {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?  // Optional description
  maxMembers  Int?     // Optional maximum number of members
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Many-to-many relationship with User
  users UserCompanyParty[]

  @@map("company_parties")
}

model UserCompanyParty {
  id             String       @id @default(cuid())
  userId         String
  companyPartyId String
  joinedAt       DateTime     @default(now())

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  companyParty CompanyParty @relation(fields: [companyPartyId], references: [id], onDelete: Cascade)

  @@unique([userId, companyPartyId])
  @@map("user_company_parties")
}

model Item {
  id          String       @id @default(cuid())
  name        String       @unique
  category    ItemCategory
  grade       ItemGrade
  valorGsInt  Int          @map("valor_gs_int")
  valorDkp    Int          @map("valor_dkp")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@map("items")
}
